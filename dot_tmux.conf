# Pane navigation with Ctrl+h / Ctrl+l / Ctrl+j / Ctrl+k
bind -n C-h select-pane -L
bind -n C-l select-pane -R
bind -n C-j select-pane -D
bind -n C-k select-pane -U

##### Status bar — layout & refresh #####
set -g status on
set -g status-interval 10
set -g status-bg colour236
set -g status-fg white

# Put window list in the center
set -g status-justify centre
set -g status-left-length 40
set -g status-right-length 120

##### Left: session name #####
set -g status-left "#[fg=green,bold]#S#[default] "

##### Center: window list #####
# Normal windows
set -g window-status-format " #[fg=yellow]#I:#W#[default] "
# Current (active) window highlighted
set -g window-status-current-format " #[fg=black,bg=yellow,bold]#I:#W#[default] "
# Separator between window entries
set -g window-status-separator " "

##### Right: CPU | MEM | host #####
# CPU: robust vmstat parser:
# - take two 1s samples (vmstat 1 2)
# - find the "id" (idle) column index from the header row
# - print 100 - idle% from the last data line
# MEM: used = total - available
set -g status-right "#[fg=cyan]CPU #[fg=white]#(vmstat 1 2 | awk 'NR==2{for(i=1;i<=NF;i++) if(\$i==\"id\") c=i; next} NF{v=\$c} END{if(v==\"\") print \"…\"; else printf \"%d%%\", 100-v}') \
 #[fg=cyan]| MEM #[fg=white]#(free -m | awk '/Mem:/ {used=\$2-\$7; printf \"%.1f/%.1fG (%d%%)\", used/1024, \$2/1024, (used*100/\$2)}') \
 #[fg=cyan]| #[fg=white]#h"

# Mouse mode
set -g mouse on
