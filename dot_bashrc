# ~/.bashrc — clean Ubuntu dev setup

# ─────────────────────────────────────────────────────────
# Exit if non-interactive
# ─────────────────────────────────────────────────────────
case $- in
  *i*) ;;
  *) return;;
esac

# ─────────────────────────────────────────────────────────
# History (big, useful, de-duplicated, with timestamps)
# ─────────────────────────────────────────────────────────
shopt -s histappend           # append to history, don’t overwrite
shopt -s cmdhist              # save multi-line commands as one
HISTSIZE=100000
HISTFILESIZE=200000
HISTCONTROL=ignoredups:erasedups   # no dupes, collapse older dupes
HISTTIMEFORMAT='%F %T '            # 2025-10-02 17:05:13

# ─────────────────────────────────────────────────────────
# Better less for non-text files
# ─────────────────────────────────────────────────────────
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# ─────────────────────────────────────────────────────────
# Colors & ls/grep aliases (GNU coreutils)
# ─────────────────────────────────────────────────────────
if command -v dircolors >/dev/null 2>&1; then
  test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
fi

alias ls='ls -laFh --color=auto --group-directories-first'
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# ─────────────────────────────────────────────────────────
# Bash completion
# ─────────────────────────────────────────────────────────
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# ─────────────────────────────────────────────────────────
# Prompt: user@host:cwd [git] (exit status colored)
# Uses __git_ps1 if available; falls back to a tiny parser.
# ─────────────────────────────────────────────────────────

# Colors
c_reset='\[\e[0m\]'
c_user='\[\e[1;33m\]'   # bold yellow
c_host='\[\e[1;32m\]'   # bold green
c_path='\[\e[1;34m\]'   # bold blue
c_git='\[\e[1;35m\]'    # bold magenta
c_err='\[\e[1;31m\]'    # bold red
c_ok='\[\e[1;32m\]'     # bold green

# Prefer __git_ps1 if present (from git-prompt)
if [ -f /usr/lib/git-core/git-sh-prompt ] || [ -f /usr/share/git-core/contrib/completion/git-prompt.sh ] || [ -f /usr/share/bash-completion/completions/git ]; then
  # Try common locations
  [ -f /usr/lib/git-core/git-sh-prompt ] && . /usr/lib/git-core/git-sh-prompt
  [ -f /usr/share/git-core/contrib/completion/git-prompt.sh ] && . /usr/share/git-core/contrib/completion/git-prompt.sh
  # some distros expose __git_ps1 via bash-completion git script
  [ -f /usr/share/bash-completion/completions/git ] && . /usr/share/bash-completion/completions/git

  GIT_PS1_SHOWDIRTYSTATE=1
  GIT_PS1_SHOWSTASHSTATE=1
  GIT_PS1_SHOWUPSTREAM=auto

  prompt_cmd() {
    local rc=$?
    local status="${c_ok}✔${c_reset}"
    [ $rc -ne 0 ] && status="${c_err}✘${rc}${c_reset}"
    local host_color="$c_host"
    [ -n "$SSH_CONNECTION" ] && host_color='\[\e[1;36m\]' # cyan when SSH

    PS1="${status} ${c_user}\u${c_reset}@${host_color}\h${c_reset}:${c_path}\w${c_reset} ${c_git}$(__git_ps1 '[%s]')${c_reset}\n\$ "
  }
  PROMPT_COMMAND=prompt_cmd
else
  # Fallback minimal git branch parser
  parse_git_branch() {
    git rev-parse --abbrev-ref HEAD 2>/dev/null | sed 's/^/[/;s/$/]/'
  }
  prompt_cmd() {
    local rc=$?
    local status="${c_ok}✔${c_reset}"
    [ $rc -ne 0 ] && status="${c_err}✘${rc}${c_reset}"
    local host_color="$c_host"
    [ -n "$SSH_CONNECTION" ] && host_color='\[\e[1;36m\]'

    PS1="${status} ${c_user}\u${c_reset}@${host_color}\h${c_reset}:${c_path}\w${c_reset} ${c_git}$(parse_git_branch)${c_reset}\n\$ "
  }
  PROMPT_COMMAND=prompt_cmd
fi

# Terminal title for xterm-compatible terms
case "$TERM" in
  xterm*|rxvt*|tmux*|screen*)
    PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME%%.*}: ${PWD/#$HOME/~}\007";'"$PROMPT_COMMAND"
    ;;
esac

# ─────────────────────────────────────────────────────────
# Aliases & helpers
# ─────────────────────────────────────────────────────────
alias reload='source ~/.bashrc'

# Git quickies (fixed your `gr` dash and commit message helper)
alias gs='git status'
alias gf='git fetch'
alias gaa='git add .'
alias gr='git remote -v'
alias gcmsg='git commit -m'   # usage: gcmsg "message"

# Common QoL
mkcd() { mkdir -p -- "$1" && cd -- "$1"; }

# Optional: fzf integration if installed
if command -v fzf >/dev/null 2>&1; then
  [ -f ~/.fzf.bash ] && . ~/.fzf.bash
fi

# Optional: auto-start tmux on SSH (uncomment to enable)
# if [ -n "$SSH_CONNECTION" ] && [ -z "$TMUX" ] && command -v tmux >/dev/null 2>&1; then
#   tmux new -A -s main
# fi
